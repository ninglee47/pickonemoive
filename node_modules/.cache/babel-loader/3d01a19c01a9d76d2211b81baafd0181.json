{"ast":null,"code":"var _jsxFileName = \"/Users/ning/Personal/React_learn/pick-one/src/Stream.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = 'nPkwzsC8PrwHhxzzZvhOFt6OU4rGNVuTFq1UQ7nS';\nlet baseUrl = 'https://api.watchmode.com/v1/search/?apiKey={apiKey}&search_value=Ed%20Wood';\n\nasync function getStreamData(movie_id) {\n  let streams = await fetch(`https://api.watchmode.com/v1/title/${movie_id}/sources/?apiKey=${apiKey}&regions=GB`).then(res => res.json());\n  console.log(streams);\n  return streams;\n}\n\nfunction GenreList(props) {\n  let genres;\n  genres = props.data.map((d, index) =>\n  /*#__PURE__*/\n  //console.log(genre.name)\n  _jsxDEV(\"li\", {\n    children: [d.name, \"Type: \", d.type, /*#__PURE__*/_jsxDEV(\"a\", {\n      href: d.web_url,\n      target: \"_blank\",\n      children: \"Link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: genres\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_c = GenreList;\n\nclass Stream extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stream: []\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    var id = this.props.value.id;\n\n    if (id !== prevProps.value.id) {\n      getStreamData(id).then(data => this.setState({\n        stream: data\n      })).then(() => {\n        var arrayOne = this.props.data;\n        var arrayTwo = this.state.stream;\n        const results = arrayOne.filter(({\n          id: id1\n        }) => arrayTwo.some(({\n          source_id: id2\n        }) => id2 === id1));\n        console.log(results);\n\n        for (let index = 0; index < arrayTwo.length; index++) {\n          const element = arrayTwo[index];\n\n          for (let index = 0; index < results.length; index++) {\n            const id = results[index].id;\n\n            if (element.source_id == id) {\n              element.name = results[index].name;\n            }\n          }\n        }\n\n        this.setState({\n          stream: arrayTwo\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Avaialbe on:\", /*#__PURE__*/_jsxDEV(GenreList, {\n        data: this.state.stream\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Stream;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenreList\");","map":{"version":3,"sources":["/Users/ning/Personal/React_learn/pick-one/src/Stream.js"],"names":["React","apiKey","baseUrl","getStreamData","movie_id","streams","fetch","then","res","json","console","log","GenreList","props","genres","data","map","d","index","name","type","web_url","Stream","Component","constructor","state","stream","componentDidUpdate","prevProps","id","value","setState","arrayOne","arrayTwo","results","filter","id1","some","source_id","id2","length","element","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst apiKey = 'nPkwzsC8PrwHhxzzZvhOFt6OU4rGNVuTFq1UQ7nS'\nlet baseUrl = 'https://api.watchmode.com/v1/search/?apiKey={apiKey}&search_value=Ed%20Wood'\n\n\nasync function getStreamData (movie_id) {\n    let streams = await fetch(`https://api.watchmode.com/v1/title/${movie_id}/sources/?apiKey=${apiKey}&regions=GB`)\n    .then(res => res.json())\n\n    console.log(streams)\n\n    return streams\n}\n\nfunction GenreList(props) {\n    let genres\n    \n        genres = props.data.map((d, index)=> \n            //console.log(genre.name)\n            <li key={index}>\n                {d.name}\n                Type: {d.type}\n                <a href={d.web_url} target='_blank'>Link</a>\n            </li>\n        )   \n    \n    return (\n        <div>\n            <ul>{genres }</ul>\n        </div>\n    )\n}\n\nclass Stream extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            stream: []\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        var id = this.props.value.id\n        if (id !== prevProps.value.id) {\n            getStreamData(id)\n            .then(data => this.setState({\n                stream: data\n                })\n            ).then(()=> {\n                var arrayOne =  this.props.data;\n                var arrayTwo = this.state.stream;\n                \n                const results = arrayOne.filter(({ id: id1 }) => arrayTwo.some(({ source_id: id2 }) => id2 === id1));\n\n                console.log(results)\n                for (let index = 0; index < arrayTwo.length; index++) {\n                    const element = arrayTwo[index];\n                    for (let index = 0; index < results.length; index++) {\n                        const id = results[index].id;\n                        if (element.source_id == id) {\n                            element.name = results[index].name\n                        }    \n                    }   \n                }\n                this.setState({\n                    stream: arrayTwo\n                })\n            })\n        }\n    }\n\n    render () {\n        return (\n            <div>\n                Avaialbe on:\n                <GenreList data={this.state.stream}/>\n            </div>\n        )\n    }\n}\n\nexport default Stream;"]},"metadata":{},"sourceType":"module"}