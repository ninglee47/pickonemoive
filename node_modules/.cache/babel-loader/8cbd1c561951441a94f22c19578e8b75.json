{"ast":null,"code":"var _jsxFileName = \"/Users/ning/Personal/React_learn/pick-one/src/PickButton.js\";\nimport React from 'react';\nimport DisplayData from './Display';\nimport Imdb from './Imdb';\nimport Stream from './Stream'; //const apiKey = '361c5360d12fe6b74f04ebd76dfd7c4b' timdb key\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst min_movie_id = 2;\nlet latestUrl = `https://api.themoviedb.org/3/movie/latest?api_key=${apiKey}&language=en-US`;\nlet listUrl = 'https://api.watchmode.com/v1/list-titles/?apiKey={apiKey}&source_ids=203,57'; //generate random number\n\nfunction getRandom(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n;\n\nasync function getRamdonId() {\n  var res = await fetch(latestUrl);\n  var dat = await res.json();\n  var latest_movie_id = dat.id;\n  var random_movie_id = getRandom(min_movie_id, latest_movie_id);\n  return random_movie_id;\n}\n\nclass Pick extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: \"Let's see...\",\n      data: {},\n      imdb_data: {}\n    };\n    this.handlePick = this.handlePick.bind(this);\n    this.handleIMDBchange = this.handleIMDBchange.bind(this);\n  }\n\n  handleIMDBchange(key) {\n    this.setState({\n      imdb_data: key\n    }); //console.log('Called')\n  }\n\n  handlePick() {\n    getRamdonId().then(value => {\n      //console.log(value)\n      this.setState({\n        movie: value\n      });\n    }).then(() => {\n      var movie_id = this.state.movie;\n      let searchURl = `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${apiKey}&language=en-US`;\n      fetch(searchURl).then(res => res.json()).then(data => {\n        if (data.imdb_id == null) {\n          this.handlePick();\n        } else {\n          //console.log(data)\n          this.setState({\n            data: data\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DisplayData, {\n        value: this.state.data,\n        data: this.state.imdb_data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Imdb, {\n        value: this.state.data,\n        onIMDBchange: this.handleIMDBchange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stream, {\n        value: this.state.data,\n        reRoll: this.handlePick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handlePick,\n        children: \"Pick!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Pick;","map":{"version":3,"sources":["/Users/ning/Personal/React_learn/pick-one/src/PickButton.js"],"names":["React","DisplayData","Imdb","Stream","min_movie_id","latestUrl","apiKey","listUrl","getRandom","min","max","Math","floor","random","getRamdonId","res","fetch","dat","json","latest_movie_id","id","random_movie_id","Pick","Component","constructor","props","state","movie","data","imdb_data","handlePick","bind","handleIMDBchange","key","setState","then","value","movie_id","searchURl","imdb_id","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DisplayData from './Display';\nimport Imdb from './Imdb'\nimport Stream from './Stream'\n\n//const apiKey = '361c5360d12fe6b74f04ebd76dfd7c4b' timdb key\n\nconst min_movie_id = 2\nlet latestUrl = `https://api.themoviedb.org/3/movie/latest?api_key=${apiKey}&language=en-US`\nlet listUrl = 'https://api.watchmode.com/v1/list-titles/?apiKey={apiKey}&source_ids=203,57'\n\n\n//generate random number\nfunction getRandom(min,max){\n    return Math.floor(Math.random()*(max-min+1))+min;\n};\n\nasync function getRamdonId() {\n    var res = await fetch(latestUrl);\n    var dat = await res.json();\n    var latest_movie_id = dat.id;\n    var random_movie_id = getRandom (min_movie_id, latest_movie_id);\n    return random_movie_id\n}\n\nclass Pick extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movie: \"Let's see...\",\n            data: {},\n            imdb_data: {}\n        }\n        this.handlePick = this.handlePick.bind(this);\n        this.handleIMDBchange = this.handleIMDBchange.bind(this);\n    }\n\n    handleIMDBchange (key) {\n        this.setState({\n            imdb_data: key\n        })\n        //console.log('Called')\n    }\n\n    handlePick() {\n\n        getRamdonId().then(value => {\n            //console.log(value)\n            this.setState({\n                movie: value\n            });\n        }).then( () => {\n            var movie_id = this.state.movie\n            let searchURl = `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${apiKey}&language=en-US`\n            fetch(searchURl)\n            .then(res => res.json())\n            .then(data => {\n                if (data.imdb_id == null) {\n                    this.handlePick()\n                } else {\n                    //console.log(data)\n                    this.setState({\n                        data: data\n                    })\n                }\n            })\n        })\n    }\n\n    render () {\n        return (\n            <div>       \n                <DisplayData value={this.state.data} data={this.state.imdb_data}/>\n                <Imdb value={this.state.data}  onIMDBchange={this.handleIMDBchange}/>\n                <Stream value={this.state.data} reRoll={this.handlePick}></Stream>\n                <button onClick={this.handlePick}>Pick!</button>\n            </div>\n        )\n    }\n}\n\nexport default Pick"]},"metadata":{},"sourceType":"module"}