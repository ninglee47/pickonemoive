{"ast":null,"code":"var _jsxFileName = \"/Users/ning/Personal/React_learn/pick-one/src/PickButton.js\";\nimport React from 'react';\nimport DisplayData from './Display';\nimport Imdb from './Imdb';\nimport Stream from './Stream'; //const apiKey = '361c5360d12fe6b74f04ebd76dfd7c4b' timdb key\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = 'nPkwzsC8PrwHhxzzZvhOFt6OU4rGNVuTFq1UQ7nS';\nconst min_movie_id = 2; //generate random number\n\nfunction getRandom(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n;\n\nasync function getAllMovie() {\n  let movieList = [];\n\n  for (let index = 1; index < 2; index++) {\n    let listUrl = `https://api.watchmode.com/v1/list-titles/?apiKey=${apiKey}&regions=GB&page=${index}`;\n    var res = await fetch(listUrl);\n    var dat = await res.json();\n    console.log(dat);\n    movieList.push(dat);\n  } //console.log(movieList)\n\n\n  return movieList;\n}\n\nasync function getSource() {\n  let url = `https://api.watchmode.com/v1/sources/?apiKey=${apiKey}&regions=GB`;\n  var res = await fetch(url);\n  var dat = await res.json();\n  return dat;\n}\n\nasync function getGenre() {\n  let url = `https://api.watchmode.com/v1/genres/?apiKey=${apiKey}`;\n  var res = await fetch(url);\n  var dat = await res.json();\n  console.log(dat);\n  return dat;\n}\n\nclass Pick extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataList: [],\n      movie: {},\n      imdb_data: {},\n      source: [],\n      genres: [],\n      selectedGenre: ''\n    };\n    this.handlePick = this.handlePick.bind(this);\n    this.handleIMDBchange = this.handleIMDBchange.bind(this);\n  }\n\n  handleIMDBchange(key) {\n    this.setState({\n      imdb_data: key\n    }); //console.log('Called')\n  }\n\n  handlePick() {\n    //console.log(this.state.movie.length)\n    var arr = getRandom(0, this.state.dataList.length) - 1;\n    console.log(arr);\n\n    if (arr >= 0) {\n      var elm = getRandom(0, this.state.dataList[arr].titles.length);\n      var movie = this.state.dataList[arr].titles[elm];\n      console.log(movie);\n      this.setState({\n        movie: movie\n      });\n    }\n  }\n\n  componentDidMount() {\n    getAllMovie().then(data => this.setState({\n      dataList: data\n    }));\n    getSource().then(res => this.setState({\n      source: res\n    }));\n    getGenre().then(res => this.setState({\n      genres: res\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Imdb, {\n        value: this.state.movie,\n        onIMDBchange: this.handleIMDBchange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stream, {\n        value: this.state.movie,\n        data: this.state.source\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Pick your favorite flavor:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"country\",\n            value: this.state.genres,\n            children: this.state.genres.map((e, key) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: e.name,\n                children: e.name\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 36\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handlePick,\n        children: \"Pick!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Pick;","map":{"version":3,"sources":["/Users/ning/Personal/React_learn/pick-one/src/PickButton.js"],"names":["React","DisplayData","Imdb","Stream","apiKey","min_movie_id","getRandom","min","max","Math","floor","random","getAllMovie","movieList","index","listUrl","res","fetch","dat","json","console","log","push","getSource","url","getGenre","Pick","Component","constructor","props","state","dataList","movie","imdb_data","source","genres","selectedGenre","handlePick","bind","handleIMDBchange","key","setState","arr","length","elm","titles","componentDidMount","then","data","render","handleSubmit","map","e","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DisplayData from './Display';\nimport Imdb from './Imdb'\nimport Stream from './Stream'\n\n//const apiKey = '361c5360d12fe6b74f04ebd76dfd7c4b' timdb key\nconst apiKey = 'nPkwzsC8PrwHhxzzZvhOFt6OU4rGNVuTFq1UQ7nS'\n\nconst min_movie_id = 2\n\n//generate random number\nfunction getRandom(min,max){\n    return Math.floor(Math.random()*(max-min+1))+min;\n};\n\nasync function getAllMovie() {\n    let movieList = [];\n\n    for (let index = 1; index < 2; index++) {\n        let listUrl = `https://api.watchmode.com/v1/list-titles/?apiKey=${apiKey}&regions=GB&page=${index}`\n        var res = await fetch(listUrl);\n        var dat = await res.json();\n        console.log(dat)\n        movieList.push(dat)\n    }\n\n    //console.log(movieList)\n\n    return movieList;\n}\n\nasync function getSource() {\n    let url = `https://api.watchmode.com/v1/sources/?apiKey=${apiKey}&regions=GB`\n    var res = await fetch(url)\n    var dat = await res.json()\n    return dat;\n}\n\nasync function getGenre() {\n    let url = `https://api.watchmode.com/v1/genres/?apiKey=${apiKey}`\n    var res = await fetch(url)\n    var dat = await res.json()\n    console.log(dat)\n    return dat;\n}\n\n\nclass Pick extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataList: [],\n            movie: {},\n            imdb_data: {},\n            source: [],\n            genres: [],\n            selectedGenre: ''\n        }\n        this.handlePick = this.handlePick.bind(this);\n        this.handleIMDBchange = this.handleIMDBchange.bind(this);\n    }\n\n    handleIMDBchange (key) {\n        this.setState({\n            imdb_data: key\n        })\n        //console.log('Called')\n    }\n\n    handlePick() {\n        //console.log(this.state.movie.length)\n        var arr = getRandom(0, this.state.dataList.length) - 1;\n        console.log(arr)\n        if (arr >= 0) {\n            var elm = getRandom(0, this.state.dataList[arr].titles.length)\n            var movie = this.state.dataList[arr].titles[elm]\n            console.log(movie)\n            this.setState({\n                movie: movie\n            })\n\n        }\n    }\n    \n    componentDidMount () {\n        getAllMovie().then( data =>\n            this.setState({\n                dataList: data\n            })\n        )\n\n        getSource().then(res => \n            this.setState({\n                source: res\n            })\n        )\n\n        getGenre().then(res => \n            this.setState({\n                genres: res\n            })\n        )\n    }\n\n    render () {\n        return (\n            <div>\n                \n                <Imdb value={this.state.movie}  onIMDBchange={this.handleIMDBchange}/> \n                <Stream value={this.state.movie} data={this.state.source}/>\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                      Pick your favorite flavor:\n                      <select name=\"country\" value={this.state.genres}>\n                        {this.state.genres.map((e, key) => {\n                            return <option key={key} value={e.name}>{e.name}</option>;\n                        })}\n                      </select>\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                <button onClick={this.handlePick}>Pick!</button>\n            </div>\n        )\n    }\n}\n\nexport default Pick"]},"metadata":{},"sourceType":"module"}