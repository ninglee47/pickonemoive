{"ast":null,"code":"var _jsxFileName = \"/Users/ning/Personal/React_learn/pick-one/src/Imdb.js\";\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst omdb_key = '6163e7ca';\nconst pageLink = \"https://www.imdb.com/title/\";\n\nclass Imdb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imdbData: {}\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    //console.log(this.props.value.imdb_id)\n    var id = this.props.value.imdb_id;\n\n    if (id !== prevProps.value.imdb_id) {\n      fetch(`http://www.omdbapi.com/?i=${id}&apikey=6163e7ca`).then(res => res.json()).then(data => {\n        console.log(data);\n        this.setState({\n          imdbData: data\n        });\n        this.props.onIMDBchange(this.state.imdbData);\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", this.props.value.title, \" \", this.props.value.year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.imdbData.Poster\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Genre: \", this.state.imdbData.Genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Imdb Score: \", this.state.imdbData.imdbRating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Votes: \", this.state.imdbData.imdbVotes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: pageLink + this.props.value.imdb_id,\n        target: \"_blank\",\n        children: \"IMDB LINK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Imdb;","map":{"version":3,"sources":["/Users/ning/Personal/React_learn/pick-one/src/Imdb.js"],"names":["React","useEffect","omdb_key","pageLink","Imdb","Component","constructor","props","state","imdbData","componentDidUpdate","prevProps","id","value","imdb_id","fetch","then","res","json","data","console","log","setState","onIMDBchange","catch","err","error","render","title","year","Poster","Genre","imdbRating","imdbVotes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,6BAAjB;;AAEA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAb;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B;AACA,QAAIC,EAAE,GAAG,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,OAA1B;;AACA,QAAIF,EAAE,KAAKD,SAAS,CAACE,KAAV,CAAgBC,OAA3B,EAAoC;AAChCC,MAAAA,KAAK,CAAE,6BAA4BH,EAAG,kBAAjC,CAAL,CACCI,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,aAAKG,QAAL,CAAc;AACVb,UAAAA,QAAQ,EAAEU;AADA,SAAd;AAGA,aAAKZ,KAAL,CAAWgB,YAAX,CAAwB,KAAKf,KAAL,CAAWC,QAAnC;AACH,OARD,EASCe,KATD,CASOC,GAAG,IAAI;AACbL,QAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACA,OAXD;AAYH;AACJ;;AAGDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,wBAAM,KAAKpB,KAAL,CAAWM,KAAX,CAAiBe,KAAvB,OAA+B,KAAKrB,KAAL,CAAWM,KAAX,CAAiBgB,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,GAAG,EAAE,KAAKrB,KAAL,CAAWC,QAAX,CAAoBqB;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,8BAAW,KAAKtB,KAAL,CAAWC,QAAX,CAAoBsB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,mCAAgB,KAAKvB,KAAL,CAAWC,QAAX,CAAoBuB,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,8BAAW,KAAKxB,KAAL,CAAWC,QAAX,CAAoBwB,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAG,QAAA,IAAI,EAAE9B,QAAQ,GAAG,KAAKI,KAAL,CAAWM,KAAX,CAAiBC,OAArC;AAA8C,QAAA,MAAM,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAtC8B;;AAyCnC,eAAeV,IAAf","sourcesContent":["import React, {useEffect} from 'react'\n\nconst omdb_key = '6163e7ca'\nconst pageLink = \"https://www.imdb.com/title/\"\n\nclass Imdb extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {imdbData: {}}\n    }\n\n    componentDidUpdate(prevProps) {\n        //console.log(this.props.value.imdb_id)\n        var id = this.props.value.imdb_id\n        if (id !== prevProps.value.imdb_id) {\n            fetch(`http://www.omdbapi.com/?i=${id}&apikey=6163e7ca`)\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                this.setState({\n                    imdbData: data\n                })\n                this.props.onIMDBchange(this.state.imdbData)\n            })\n            .catch(err => {\n            \tconsole.error(err);\n            })  \n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h2> {this.props.value.title} {this.props.value.year}</h2>\n                <img src={this.state.imdbData.Poster}></img>\n                <p>Genre: {this.state.imdbData.Genre}</p>\n                <p>Imdb Score: {this.state.imdbData.imdbRating}</p>\n                <p>Votes: {this.state.imdbData.imdbVotes}</p>\n                <a href={pageLink + this.props.value.imdb_id} target=\"_blank\">IMDB LINK</a>\n            </div>\n        )\n\n    }\n}\n\nexport default Imdb"]},"metadata":{},"sourceType":"module"}