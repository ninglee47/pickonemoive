{"ast":null,"code":"var _jsxFileName = \"/Users/ning/Personal/React_learn/pick-one/src/Stream.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = 'nPkwzsC8PrwHhxzzZvhOFt6OU4rGNVuTFq1UQ7nS';\nlet baseUrl = 'https://api.watchmode.com/v1/search/?apiKey={apiKey}&search_value=Ed%20Wood';\n\nasync function getStreamData(movie_id) {\n  let api_id = await fetch(`https://api.watchmode.com/v1/search/?apiKey=${apiKey}&search_field=imdb_id&search_value=${movie_id}`).then(res => res.json());\n  this.id = id;\n  console.log(id);\n}\n\nclass Stream extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streamid: \"\"\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    //console.log(this.props.value.imdb_id)\n    var id = this.props.value.imdb_id;\n\n    if (id !== prevProps.value.imdb_id) {\n      getStreamData(id);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Avaialbe on:\", this.state.stream]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Stream;","map":{"version":3,"sources":["/Users/ning/Personal/React_learn/pick-one/src/Stream.js"],"names":["React","apiKey","baseUrl","getStreamData","movie_id","api_id","fetch","then","res","json","id","console","log","Stream","Component","constructor","props","state","streamid","componentDidUpdate","prevProps","value","imdb_id","render","stream"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,0CAAf;AACA,IAAIC,OAAO,GAAG,6EAAd;;AAGA,eAAeC,aAAf,CAA8BC,QAA9B,EAAwC;AACpC,MAAIC,MAAM,GAAG,MAAMC,KAAK,CAAE,+CAA8CL,MAAO,sCAAqCG,QAAS,EAArG,CAAL,CAClBG,IADkB,CACbC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADM,CAAnB;AAGA,OAAKC,EAAL,GAAUA,EAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACH;;AAED,MAAMG,MAAN,SAAqBb,KAAK,CAACc,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,QAAQ,EAAE;AADF,KAAZ;AAGH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B;AACA,QAAIV,EAAE,GAAG,KAAKM,KAAL,CAAWK,KAAX,CAAiBC,OAA1B;;AACA,QAAIZ,EAAE,KAAKU,SAAS,CAACC,KAAV,CAAgBC,OAA3B,EAAoC;AAChCnB,MAAAA,aAAa,CAACO,EAAD,CAAb;AACH;AACJ;;AAEDa,EAAAA,MAAM,GAAI;AACN,wBACI;AAAA,iCAEK,KAAKN,KAAL,CAAWO,MAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAvBgC;;AA0BrC,eAAeX,MAAf","sourcesContent":["import React from 'react';\n\nconst apiKey = 'nPkwzsC8PrwHhxzzZvhOFt6OU4rGNVuTFq1UQ7nS'\nlet baseUrl = 'https://api.watchmode.com/v1/search/?apiKey={apiKey}&search_value=Ed%20Wood'\n\n\nasync function getStreamData (movie_id) {\n    let api_id = await fetch(`https://api.watchmode.com/v1/search/?apiKey=${apiKey}&search_field=imdb_id&search_value=${movie_id}`)\n    .then(res => res.json())\n    \n    this.id = id\n    console.log(id)\n}\n\nclass Stream extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            streamid: \"\"\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        //console.log(this.props.value.imdb_id)\n        var id = this.props.value.imdb_id\n        if (id !== prevProps.value.imdb_id) {\n            getStreamData(id)\n        }\n    }\n\n    render () {\n        return (\n            <div>\n                Avaialbe on:\n                {this.state.stream}\n            </div>\n        )\n    }\n}\n\nexport default Stream;"]},"metadata":{},"sourceType":"module"}