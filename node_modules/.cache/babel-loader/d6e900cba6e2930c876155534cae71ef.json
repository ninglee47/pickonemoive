{"ast":null,"code":"var _jsxFileName = \"/Users/ning/Personal/React_learn/pick-one/src/Stream.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = 'nPkwzsC8PrwHhxzzZvhOFt6OU4rGNVuTFq1UQ7nS';\nlet baseUrl = 'https://api.watchmode.com/v1/search/?apiKey={apiKey}&search_value=Ed%20Wood';\n\nasync function getStreamData(movie_id) {\n  let streams = await fetch(`https://api.watchmode.com/v1/title/${movie_id}/sources/?apiKey=${apiKey}&regions=GB`).then(res => res.json());\n  console.log(streams);\n  return streams;\n}\n\nfunction GenreList(props) {\n  let genres;\n  genres = props.data.map(d =>\n  /*#__PURE__*/\n  //console.log(genre.name)\n  _jsxDEV(\"li\", {\n    children: d.source_id\n  }, d.index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: genres\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_c = GenreList;\n\nclass Stream extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stream: []\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(this.props.data);\n    var id = this.props.value.id;\n\n    if (id !== prevProps.value.id) {\n      getStreamData(id).then(data => this.setState({\n        stream: data\n      })).then(() => {\n        var arrayOne = this.props.data;\n        var arrayTwo = this.state.stream;\n        console.log(arrayOne);\n        console.log(arrayTwo);\n        const results = arrayOne.filter(({\n          id: id1\n        }) => arrayTwo.some(({\n          source_id: id2\n        }) => id2 === id1));\n        console.log(results);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Avaialbe on:\", /*#__PURE__*/_jsxDEV(GenreList, {\n        data: this.state.stream\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Stream;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenreList\");","map":{"version":3,"sources":["/Users/ning/Personal/React_learn/pick-one/src/Stream.js"],"names":["React","apiKey","baseUrl","getStreamData","movie_id","streams","fetch","then","res","json","console","log","GenreList","props","genres","data","map","d","source_id","index","Stream","Component","constructor","state","stream","componentDidUpdate","prevProps","id","value","setState","arrayOne","arrayTwo","results","filter","id1","some","id2","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,0CAAf;AACA,IAAIC,OAAO,GAAG,6EAAd;;AAGA,eAAeC,aAAf,CAA8BC,QAA9B,EAAwC;AACpC,MAAIC,OAAO,GAAG,MAAMC,KAAK,CAAE,sCAAqCF,QAAS,oBAAmBH,MAAO,aAA1E,CAAL,CACnBM,IADmB,CACdC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADO,CAApB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AAEA,SAAOA,OAAP;AACH;;AAED,SAASO,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,MAAIC,MAAJ;AAEIA,EAAAA,MAAM,GAAGD,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAgBC,CAAD;AAAA;AACpB;AACA;AAAA,cACKA,CAAC,CAACC;AADP,KAASD,CAAC,CAACE,KAAX;AAAA;AAAA;AAAA;AAAA,UAFK,CAAT;AAOJ,sBACI;AAAA,2BACI;AAAA,gBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KAfQF,S;;AAiBT,MAAMQ,MAAN,SAAqBpB,KAAK,CAACqB,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACT,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKU,KAAL,GAAY;AACRC,MAAAA,MAAM,EAAE;AADA,KAAZ;AAGH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1BhB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAL,CAAWE,IAAvB;AACA,QAAIY,EAAE,GAAG,KAAKd,KAAL,CAAWe,KAAX,CAAiBD,EAA1B;;AACA,QAAIA,EAAE,KAAKD,SAAS,CAACE,KAAV,CAAgBD,EAA3B,EAA+B;AAC3BxB,MAAAA,aAAa,CAACwB,EAAD,CAAb,CACCpB,IADD,CACMQ,IAAI,IAAI,KAAKc,QAAL,CAAc;AACxBL,QAAAA,MAAM,EAAET;AADgB,OAAd,CADd,EAIER,IAJF,CAIO,MAAK;AACR,YAAIuB,QAAQ,GAAI,KAAKjB,KAAL,CAAWE,IAA3B;AACA,YAAIgB,QAAQ,GAAG,KAAKR,KAAL,CAAWC,MAA1B;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAYmB,QAAZ;AACApB,QAAAA,OAAO,CAACC,GAAR,CAAYoB,QAAZ;AAEA,cAAMC,OAAO,GAAGF,QAAQ,CAACG,MAAT,CAAgB,CAAC;AAAEN,UAAAA,EAAE,EAAEO;AAAN,SAAD,KAAiBH,QAAQ,CAACI,IAAT,CAAc,CAAC;AAAEjB,UAAAA,SAAS,EAAEkB;AAAb,SAAD,KAAwBA,GAAG,KAAKF,GAA9C,CAAjC,CAAhB;AAEAxB,QAAAA,OAAO,CAACC,GAAR,CAAYqB,OAAZ;AAEH,OAdD;AAeH;AACJ;;AAEDK,EAAAA,MAAM,GAAI;AACN,wBACI;AAAA,8CAEI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAE,KAAKd,KAAL,CAAWC;AAA5B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AArCgC;;AAwCrC,eAAeJ,MAAf","sourcesContent":["import React from 'react';\n\nconst apiKey = 'nPkwzsC8PrwHhxzzZvhOFt6OU4rGNVuTFq1UQ7nS'\nlet baseUrl = 'https://api.watchmode.com/v1/search/?apiKey={apiKey}&search_value=Ed%20Wood'\n\n\nasync function getStreamData (movie_id) {\n    let streams = await fetch(`https://api.watchmode.com/v1/title/${movie_id}/sources/?apiKey=${apiKey}&regions=GB`)\n    .then(res => res.json())\n\n    console.log(streams)\n\n    return streams\n}\n\nfunction GenreList(props) {\n    let genres\n    \n        genres = props.data.map((d)=> \n            //console.log(genre.name)\n            <li key={d.index}>\n                {d.source_id}\n            </li>\n        )   \n    \n    return (\n        <div>\n            <ul>{genres }</ul>\n        </div>\n    )\n}\n\nclass Stream extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            stream: []\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        console.log(this.props.data)\n        var id = this.props.value.id\n        if (id !== prevProps.value.id) {\n            getStreamData(id)\n            .then(data => this.setState({\n                stream: data\n                })\n            ).then(()=> {\n                var arrayOne =  this.props.data;\n                var arrayTwo = this.state.stream;\n                console.log(arrayOne)\n                console.log(arrayTwo)\n\n                const results = arrayOne.filter(({ id: id1 }) => arrayTwo.some(({ source_id: id2 }) => id2 === id1));\n\n                console.log(results)\n\n            })\n        }\n    }\n\n    render () {\n        return (\n            <div>\n                Avaialbe on:\n                <GenreList data={this.state.stream}/>\n            </div>\n        )\n    }\n}\n\nexport default Stream;"]},"metadata":{},"sourceType":"module"}