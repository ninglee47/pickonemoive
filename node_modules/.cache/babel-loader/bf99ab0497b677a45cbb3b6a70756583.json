{"ast":null,"code":"var _jsxFileName = \"/Users/ning/Personal/React_learn/pick-one/src/PickButton.js\";\nimport React from 'react';\nimport DisplayData from './Display';\nimport Imdb from './Imdb';\nimport Stream from './Stream'; //const apiKey = '361c5360d12fe6b74f04ebd76dfd7c4b' timdb key\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = 'nPkwzsC8PrwHhxzzZvhOFt6OU4rGNVuTFq1UQ7nS';\nconst min_movie_id = 2; //generate random number\n\nfunction getRandom(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n;\n\nasync function getAllMovie() {\n  let movieList = [];\n\n  for (let index = 1; index < 2; index++) {\n    let listUrl = `https://api.watchmode.com/v1/list-titles/?apiKey=${apiKey}&regions=GB&page=${index}`;\n    var res = await fetch(listUrl);\n    var dat = await res.json();\n    console.log(dat);\n    movieList.push(dat);\n  } //console.log(movieList)\n\n\n  return movieList;\n}\n\nasync function getGenreMovie(genre) {\n  let movieList = [];\n\n  for (let index = 1; index < 2; index++) {\n    let listUrl = `https://api.watchmode.com/v1/list-titles/?apiKey=${apiKey}&regions=GB&page=${index}&genres=${genre}`;\n    var res = await fetch(listUrl);\n    var dat = await res.json();\n    console.log(dat);\n    movieList.push(dat);\n  } //console.log(movieList)\n\n\n  return movieList;\n}\n\nasync function getSource() {\n  let url = `https://api.watchmode.com/v1/sources/?apiKey=${apiKey}&regions=GB`;\n  var res = await fetch(url);\n  var dat = await res.json();\n  return dat;\n}\n\nasync function getGenre() {\n  let url = `https://api.watchmode.com/v1/genres/?apiKey=${apiKey}`;\n  var res = await fetch(url);\n  var dat = await res.json();\n  console.log(dat);\n  return dat;\n}\n\nclass Pick extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataList: [],\n      movie: {},\n      imdb_data: {},\n      source: [],\n      genres: [],\n      selectedGenre: ''\n    };\n    this.handlePick = this.handlePick.bind(this);\n    this.handleIMDBchange = this.handleIMDBchange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleIMDBchange(key) {\n    this.setState({\n      imdb_data: key\n    }); //console.log('Called')\n  }\n\n  handleChange(event) {\n    //console.log(event.target.value)\n    this.setState({\n      selectedGenre: event.target.value\n    });\n    console.log(this.state.selectedGenre);\n  }\n\n  handleSubmit(event) {\n    alert('Your favorite flavor is: ' + this.state.selectedGenre);\n    event.preventDefault();\n  }\n\n  handlePick() {\n    console.log(this.state.selectedGenre);\n    var arr = getRandom(0, this.state.dataList.length - 1);\n\n    if (this.state.selectedGenre == '') {\n      var elm = getRandom(0, this.state.dataList[arr].titles.length);\n      var movie = this.state.dataList[arr].titles[elm];\n      console.log(movie);\n      this.setState({\n        movie: movie\n      });\n    } else if (this.state.selectedGenre !== '') {\n      getGenreMovie(this.state.selectedGenre).then(data => this.setState({\n        dataList: data\n      })).then(() => {\n        console.log(this.state.dataList);\n        arr = getRandom(0, this.state.dataList.length - 1);\n        var elm = getRandom(0, this.state.dataList[arr].titles.length);\n        var movie = this.state.dataList[arr].titles[elm];\n        console.log(movie);\n        this.setState({\n          movie: movie\n        });\n      });\n    }\n  }\n\n  componentDidMount() {\n    getAllMovie().then(data => this.setState({\n      dataList: data\n    }));\n    getSource().then(res => this.setState({\n      source: res\n    }));\n    getGenre().then(res => this.setState({\n      genres: res\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Imdb, {\n        value: this.state.movie,\n        onIMDBchange: this.handleIMDBchange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stream, {\n        value: this.state.movie,\n        data: this.state.source\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Select a genre:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: this.state.selectedGenre,\n            onChange: this.handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\"\n            }, \"uni\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 27\n            }, this), this.state.genres.map((e, key) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: e.name,\n                children: e.name\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 36\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handlePick,\n        children: \"Pick!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Pick;","map":{"version":3,"sources":["/Users/ning/Personal/React_learn/pick-one/src/PickButton.js"],"names":["React","DisplayData","Imdb","Stream","apiKey","min_movie_id","getRandom","min","max","Math","floor","random","getAllMovie","movieList","index","listUrl","res","fetch","dat","json","console","log","push","getGenreMovie","genre","getSource","url","getGenre","Pick","Component","constructor","props","state","dataList","movie","imdb_data","source","genres","selectedGenre","handlePick","bind","handleIMDBchange","handleChange","handleSubmit","key","setState","event","target","value","alert","preventDefault","arr","length","elm","titles","then","data","componentDidMount","render","map","e","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DisplayData from './Display';\nimport Imdb from './Imdb'\nimport Stream from './Stream'\n\n//const apiKey = '361c5360d12fe6b74f04ebd76dfd7c4b' timdb key\nconst apiKey = 'nPkwzsC8PrwHhxzzZvhOFt6OU4rGNVuTFq1UQ7nS'\n\nconst min_movie_id = 2\n\n//generate random number\nfunction getRandom(min,max){\n    return Math.floor(Math.random()*(max-min+1))+min;\n};\n\nasync function getAllMovie() {\n    let movieList = [];\n\n    for (let index = 1; index < 2; index++) {\n        let listUrl = `https://api.watchmode.com/v1/list-titles/?apiKey=${apiKey}&regions=GB&page=${index}`\n        var res = await fetch(listUrl);\n        var dat = await res.json();\n        console.log(dat)\n        movieList.push(dat)\n    }\n\n    //console.log(movieList)\n\n    return movieList;\n}\n\nasync function getGenreMovie(genre) {\n    let movieList = [];\n\n    for (let index = 1; index < 2; index++) {\n        let listUrl = `https://api.watchmode.com/v1/list-titles/?apiKey=${apiKey}&regions=GB&page=${index}&genres=${genre}`\n        var res = await fetch(listUrl);\n        var dat = await res.json();\n        console.log(dat)\n        movieList.push(dat)\n    }\n\n    //console.log(movieList)\n\n    return movieList;\n}\n\nasync function getSource() {\n    let url = `https://api.watchmode.com/v1/sources/?apiKey=${apiKey}&regions=GB`\n    var res = await fetch(url)\n    var dat = await res.json()\n    return dat;\n}\n\nasync function getGenre() {\n    let url = `https://api.watchmode.com/v1/genres/?apiKey=${apiKey}`\n    var res = await fetch(url)\n    var dat = await res.json()\n    console.log(dat)\n    return dat;\n}\n\n\nclass Pick extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataList: [],\n            movie: {},\n            imdb_data: {},\n            source: [],\n            genres: [],\n            selectedGenre: ''\n        }\n        this.handlePick = this.handlePick.bind(this);\n        this.handleIMDBchange = this.handleIMDBchange.bind(this);\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleIMDBchange (key) {\n        this.setState({\n            imdb_data: key\n        })\n        //console.log('Called')\n    }\n\n    handleChange(event) {\n        //console.log(event.target.value)\n        this.setState({selectedGenre: event.target.value});\n        console.log(this.state.selectedGenre)\n    }\n\n    handleSubmit(event) {\n        alert('Your favorite flavor is: ' + this.state.selectedGenre);\n        event.preventDefault();\n    }\n\n    handlePick() {\n        console.log(this.state.selectedGenre)\n        var arr = getRandom(0, this.state.dataList.length -1);\n        if (this.state.selectedGenre == '') {\n            var elm = getRandom(0, this.state.dataList[arr].titles.length)\n            var movie = this.state.dataList[arr].titles[elm]\n            console.log(movie)\n            this.setState({\n                movie: movie\n            })\n        }else if (this.state.selectedGenre !== '') {\n            getGenreMovie(this.state.selectedGenre)\n            .then( data => \n                this.setState({\n                    dataList: data\n                })\n            ).then(\n                () => {\n                    console.log(this.state.dataList)\n                    arr = getRandom(0, this.state.dataList.length - 1);\n                    var elm = getRandom(0, this.state.dataList[arr].titles.length)\n                    var movie = this.state.dataList[arr].titles[elm]\n                    console.log(movie)\n                    this.setState({\n                        movie: movie\n                    })\n                }\n            )\n        }\n    }\n    \n    componentDidMount () {\n        getAllMovie().then( data =>\n            this.setState({\n                dataList: data\n            })\n        )\n\n        getSource().then(res => \n            this.setState({\n                source: res\n            })\n        )\n\n        getGenre().then(res => \n            this.setState({\n                genres: res\n            })\n        )\n    }\n\n    render () {\n        return (\n            <div>\n                \n                <Imdb value={this.state.movie}  onIMDBchange={this.handleIMDBchange}/> \n                <Stream value={this.state.movie} data={this.state.source}/>\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                      Select a genre:\n                      <select value={this.state.selectedGenre} onChange={this.handleChange}>\n                          <option key=\"uni\" value=\"\"></option>\n                        {this.state.genres.map((e, key) => {\n                            return <option key={key} value={e.name}>{e.name}</option>;\n                        })}\n                      </select>\n                    </label>\n                </form>\n                <button onClick={this.handlePick}>Pick!</button>\n            </div>\n        )\n    }\n}\n\nexport default Pick"]},"metadata":{},"sourceType":"module"}