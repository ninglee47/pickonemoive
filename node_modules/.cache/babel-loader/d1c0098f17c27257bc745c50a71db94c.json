{"ast":null,"code":"var _jsxFileName = \"/Users/ning/Personal/React_learn/pick-one/src/Imdb.js\";\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst omdb_key = '6163e7ca';\n\nclass Imdb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imdbData: {}\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    //console.log(this.props.value.imdb_id)\n    var id = this.props.value.imdb_id;\n\n    if (id !== prevProps.value.imdb_id) {\n      fetch(`http://www.omdbapi.com/?i=${id}&apikey=6163e7ca`).then(res => res.json()).then(data => {\n        console.log(data);\n        this.setState({\n          imdbData: data\n        });\n        this.props.onIMDBchange(this.state.imdbData);\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Imdb Score: \", this.state.imdbData.imdbRating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), \"Votes: \", this.state.imdbData.imdbVotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Imdb;","map":{"version":3,"sources":["/Users/ning/Personal/React_learn/pick-one/src/Imdb.js"],"names":["React","useEffect","omdb_key","Imdb","Component","constructor","props","state","imdbData","componentDidUpdate","prevProps","id","value","imdb_id","fetch","then","res","json","data","console","log","setState","onIMDBchange","catch","err","error","render","imdbRating","imdbVotes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,QAAQ,GAAG,UAAjB;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAb;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B;AACA,QAAIC,EAAE,GAAG,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,OAA1B;;AACA,QAAIF,EAAE,KAAKD,SAAS,CAACE,KAAV,CAAgBC,OAA3B,EAAoC;AAChCC,MAAAA,KAAK,CAAE,6BAA4BH,EAAG,kBAAjC,CAAL,CACCI,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,aAAKG,QAAL,CAAc;AACVb,UAAAA,QAAQ,EAAEU;AADA,SAAd;AAGA,aAAKZ,KAAL,CAAWgB,YAAX,CAAwB,KAAKf,KAAL,CAAWC,QAAnC;AACH,OARD,EASCe,KATD,CASOC,GAAG,IAAI;AACbL,QAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACA,OAXD;AAYH;AACJ;;AAGDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BAEA;AAAA,mCAAgB,KAAKnB,KAAL,CAAWC,QAAX,CAAoBmB,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,aAGQ,KAAKpB,KAAL,CAAWC,QAAX,CAAoBoB,SAH5B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AArC8B;;AAwCnC,eAAezB,IAAf","sourcesContent":["import React, {useEffect} from 'react'\n\nconst omdb_key = '6163e7ca'\n\nclass Imdb extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {imdbData: {}}\n    }\n\n    componentDidUpdate(prevProps) {\n        //console.log(this.props.value.imdb_id)\n        var id = this.props.value.imdb_id\n        if (id !== prevProps.value.imdb_id) {\n            fetch(`http://www.omdbapi.com/?i=${id}&apikey=6163e7ca`)\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                this.setState({\n                    imdbData: data\n                })\n                this.props.onIMDBchange(this.state.imdbData)\n            })\n            .catch(err => {\n            \tconsole.error(err);\n            })  \n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n\n            <p>Imdb Score: {this.state.imdbData.imdbRating}</p>\n            Votes: {this.state.imdbData.imdbVotes}\n            \n\n            </div>\n        )\n\n    }\n}\n\nexport default Imdb"]},"metadata":{},"sourceType":"module"}