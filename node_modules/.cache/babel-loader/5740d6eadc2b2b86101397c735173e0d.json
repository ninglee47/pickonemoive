{"ast":null,"code":"var _jsxFileName = \"/Users/ning/Personal/React_learn/pick-one/src/PickButton.js\";\nimport React from 'react';\nimport Imdb from './Imdb';\nimport Stream from './Stream'; //const apiKey = '361c5360d12fe6b74f04ebd76dfd7c4b' timdb key\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = 'nPkwzsC8PrwHhxzzZvhOFt6OU4rGNVuTFq1UQ7nS'; //generate random number\n\nfunction getRandom(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n;\n\nasync function getAllMovie() {\n  var page = getRandom(0, 104);\n  let movieList = [];\n  let listUrl = `https://api.watchmode.com/v1/list-titles/?apiKey=${apiKey}&regions=GB&page=${page}`;\n  var res = await fetch(listUrl);\n  var dat = await res.json();\n  console.log(dat);\n  movieList.push(dat);\n  return movieList;\n}\n\nasync function getSource() {\n  let url = `https://api.watchmode.com/v1/sources/?apiKey=${apiKey}&regions=GB`;\n  var res = await fetch(url);\n  var dat = await res.json();\n  return dat;\n}\n\nasync function getGenre() {\n  let url = `https://api.watchmode.com/v1/genres/?apiKey=${apiKey}`;\n  var res = await fetch(url);\n  var dat = await res.json();\n  return dat;\n}\n\nclass Pick extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataList: [],\n      movie: {},\n      imdb_data: {},\n      source: [],\n      genres: [],\n      selectedGenre: ''\n    };\n    this.handlePick = this.handlePick.bind(this);\n    this.handleIMDBchange = this.handleIMDBchange.bind(this);\n  }\n\n  handleIMDBchange(key) {\n    this.setState({\n      imdb_data: key\n    }); //console.log('Called')\n  }\n\n  handlePick() {\n    console.log(this.state.dataList[0].titles); //var elm = getRandom(0, this.state.dataList[0].titles.length)\n    //var movie = this.state.dataList.titles[elm]\n    //console.log(movie)\n    //this.setState({\n    //    movie: movie\n    //})\n  }\n\n  componentDidMount() {\n    getAllMovie().then(data => this.setState({\n      dataList: data\n    }));\n    getSource().then(res => this.setState({\n      source: res\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Imdb, {\n        value: this.state.movie,\n        onIMDBchange: this.handleIMDBchange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stream, {\n        value: this.state.movie,\n        data: this.state.source\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handlePick,\n        children: \"Pick!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Pick;","map":{"version":3,"sources":["/Users/ning/Personal/React_learn/pick-one/src/PickButton.js"],"names":["React","Imdb","Stream","apiKey","getRandom","min","max","Math","floor","random","getAllMovie","page","movieList","listUrl","res","fetch","dat","json","console","log","push","getSource","url","getGenre","Pick","Component","constructor","props","state","dataList","movie","imdb_data","source","genres","selectedGenre","handlePick","bind","handleIMDBchange","key","setState","titles","componentDidMount","then","data","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Imdb from './Imdb'\nimport Stream from './Stream'\n\n//const apiKey = '361c5360d12fe6b74f04ebd76dfd7c4b' timdb key\nconst apiKey = 'nPkwzsC8PrwHhxzzZvhOFt6OU4rGNVuTFq1UQ7nS'\n\n//generate random number\nfunction getRandom(min,max){\n    return Math.floor(Math.random()*(max-min+1))+min;\n};\n\nasync function getAllMovie() {\n    var page = getRandom(0, 104);\n    let movieList = [];\n\n    let listUrl = `https://api.watchmode.com/v1/list-titles/?apiKey=${apiKey}&regions=GB&page=${page}`\n    var res = await fetch(listUrl);\n    var dat = await res.json();\n    console.log(dat)\n    movieList.push(dat)\n    \n    return movieList;\n}\n\nasync function getSource() {\n    let url = `https://api.watchmode.com/v1/sources/?apiKey=${apiKey}&regions=GB`\n    var res = await fetch(url)\n    var dat = await res.json()\n    return dat;\n}\n\nasync function getGenre() {\n    let url = `https://api.watchmode.com/v1/genres/?apiKey=${apiKey}`\n    var res = await fetch(url)\n    var dat = await res.json()\n    return dat;\n}\n\n\nclass Pick extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataList: [],\n            movie: {},\n            imdb_data: {},\n            source: [],\n            genres: [],\n            selectedGenre: ''\n        }\n        this.handlePick = this.handlePick.bind(this);\n        this.handleIMDBchange = this.handleIMDBchange.bind(this);\n    }\n\n    handleIMDBchange (key) {\n        this.setState({\n            imdb_data: key\n        })\n        //console.log('Called')\n    }\n\n    handlePick() {\n        console.log(this.state.dataList[0].titles)\n        //var elm = getRandom(0, this.state.dataList[0].titles.length)\n        //var movie = this.state.dataList.titles[elm]\n        //console.log(movie)\n        //this.setState({\n        //    movie: movie\n        //})\n    }\n    \n    componentDidMount () {\n        getAllMovie().then( data =>\n            this.setState({\n                dataList: data\n            })\n        )\n\n        getSource().then(res => \n            this.setState({\n                source: res\n            })\n        )\n    }\n\n    render () {\n        return (\n            <div>\n                <Imdb value={this.state.movie}  onIMDBchange={this.handleIMDBchange}/> \n                <Stream value={this.state.movie} data={this.state.source}/>\n                <button onClick={this.handlePick}>Pick!</button>\n            </div>\n        )\n    }\n}\n\nexport default Pick"]},"metadata":{},"sourceType":"module"}