{"ast":null,"code":"var _jsxFileName = \"/Users/ning/Personal/React_learn/pick-one/src/Imdb.js\";\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst omdb_key = '6163e7ca';\n\nclass Imdb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      imdbData: {}\n    };\n  } //handleChange(e) {\n  //    this.props.onIMDBChange(e.target.value);\n  //}\n\n\n  handleChange() {\n    this.props.onIMDBChange();\n  }\n\n  componentDidUpdate(prevProps) {\n    //console.log(this.props.value.imdb_id)\n    var id = this.props.value.imdb_id;\n\n    if (id !== prevProps.value.imdb_id) {\n      fetch(`http://www.omdbapi.com/?i=${id}&apikey=6163e7ca`).then(res => res.json()).then(data => {\n        console.log(data);\n        this.setState({\n          imdbData: data\n        });\n        this.props.onIMDBchange(this.state.imdbData);\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }\n\n  render() {\n    const thing = this.props.value.title; //console.log(this.props)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"From Imdb.js \", this.props.value.title, \" \", this.state.imdbData.imdbRating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n} //console.log(props.value.title)\n//fetch(`https://imdb-api.com/API/UserRatings/k_w98jf4m9/${props.value.imdb_id}`)\n//.then(response => {\n//\tconsole.log(response);\n//    props.data\n//})\n//.catch(err => {\n//\tconsole.error(err);\n//})\n\n\nexport default Imdb;","map":{"version":3,"sources":["/Users/ning/Personal/React_learn/pick-one/src/Imdb.js"],"names":["React","useEffect","omdb_key","Imdb","Component","constructor","props","handleChange","bind","state","imdbData","onIMDBChange","componentDidUpdate","prevProps","id","value","imdb_id","fetch","then","res","json","data","console","log","setState","onIMDBchange","catch","err","error","render","thing","title","imdbRating"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,QAAQ,GAAG,UAAjB;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAb;AACH,GAL8B,CAO/B;AACA;AACA;;;AAEAH,EAAAA,YAAY,GAAG;AACX,SAAKD,KAAL,CAAWK,YAAX;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B;AACA,QAAIC,EAAE,GAAG,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,OAA1B;;AACA,QAAIF,EAAE,KAAKD,SAAS,CAACE,KAAV,CAAgBC,OAA3B,EAAoC;AAChCC,MAAAA,KAAK,CAAE,6BAA4BH,EAAG,kBAAjC,CAAL,CACCI,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,aAAKG,QAAL,CAAc;AACVd,UAAAA,QAAQ,EAAEW;AADA,SAAd;AAGA,aAAKf,KAAL,CAAWmB,YAAX,CAAwB,KAAKhB,KAAL,CAAWC,QAAnC;AACH,OARD,EASCgB,KATD,CASOC,GAAG,IAAI;AACbL,QAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACA,OAXD;AAYH;AACJ;;AAGDE,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAG,KAAKxB,KAAL,CAAWS,KAAX,CAAiBgB,KAA/B,CADK,CAEL;;AACA,wBACI;AAAA,kCAEc,KAAKzB,KAAL,CAAWS,KAAX,CAAiBgB,KAF/B,OAEuC,KAAKtB,KAAL,CAAWC,QAAX,CAAoBsB,UAF3D;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA/C8B,C,CAkD/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGJ,eAAe7B,IAAf","sourcesContent":["import React, {useEffect} from 'react'\n\nconst omdb_key = '6163e7ca'\n\nclass Imdb extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleChange = this.handleChange.bind(this)\n        this.state = {imdbData: {}}\n    }\n\n    //handleChange(e) {\n    //    this.props.onIMDBChange(e.target.value);\n    //}\n\n    handleChange() {\n        this.props.onIMDBChange();\n    }\n\n    componentDidUpdate(prevProps) {\n        //console.log(this.props.value.imdb_id)\n        var id = this.props.value.imdb_id\n        if (id !== prevProps.value.imdb_id) {\n            fetch(`http://www.omdbapi.com/?i=${id}&apikey=6163e7ca`)\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                this.setState({\n                    imdbData: data\n                })\n                this.props.onIMDBchange(this.state.imdbData)\n            })\n            .catch(err => {\n            \tconsole.error(err);\n            })  \n        }\n    }\n\n\n    render() {\n        const thing = this.props.value.title\n        //console.log(this.props)\n        return (\n            <div>\n\n            From Imdb.js {this.props.value.title} {this.state.imdbData.imdbRating}\n            \n\n            </div>\n        )\n\n    }\n}\n\n    //console.log(props.value.title)\n    //fetch(`https://imdb-api.com/API/UserRatings/k_w98jf4m9/${props.value.imdb_id}`)\n    //.then(response => {\n    //\tconsole.log(response);\n    //    props.data\n    //})\n    //.catch(err => {\n    //\tconsole.error(err);\n    //})\n\n\nexport default Imdb"]},"metadata":{},"sourceType":"module"}