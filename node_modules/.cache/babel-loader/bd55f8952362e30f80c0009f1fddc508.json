{"ast":null,"code":"var _jsxFileName = \"/Users/ning/Personal/React_learn/pick-one/src/PickButton.js\";\nimport React from 'react';\nimport DisplayData from './Display';\nimport Imdb from './Imdb';\nimport Stream from './Stream'; //const apiKey = '361c5360d12fe6b74f04ebd76dfd7c4b' timdb key\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = 'nPkwzsC8PrwHhxzzZvhOFt6OU4rGNVuTFq1UQ7nS';\nconst min_movie_id = 2;\nlet latestUrl = `https://api.themoviedb.org/3/movie/latest?api_key=${apiKey}&language=en-US`; //let listUrl = `https://api.watchmode.com/v1/list-titles/?apiKey=${apiKey}&regions=GB&page=10`\n//generate random number\n\nfunction getRandom(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n;\n\nasync function getAllMovie() {\n  let movieList = [];\n\n  for (let index = 0; index < 1; index++) {\n    let listUrl = `https://api.watchmode.com/v1/list-titles/?apiKey=${apiKey}&regions=GB&page=10`;\n    var res = await fetch(listUrl);\n    var dat = await res.json();\n    console.log(dat);\n    movieList.push(dat);\n  }\n\n  console.log(movieList);\n  return movieList; //var latest_movie_id = dat.id;\n  //var random_movie_id = getRandom (min_movie_id, latest_movie_id);\n  //return random_movie_id\n}\n\nclass Pick extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: [],\n      id: \"\",\n      imdb_id: \"\"\n    };\n    this.handlePick = this.handlePick.bind(this);\n    this.handleIMDBchange = this.handleIMDBchange.bind(this);\n  }\n\n  handleIMDBchange(key) {\n    this.setState({\n      imdb_data: key\n    }); //console.log('Called')\n  }\n\n  handlePick() {\n    console.log(this.state.movie);\n    var arr = getRandom(0, this.state.movie.length);\n    var elm = getRandom(0, this.state.movie[arr].length);\n    console.log(this.state.movie[arr]); //getRamdonId().then(value => {\n    //    console.log(value)\n    //    this.setState({\n    //        movie: value\n    //    });\n    //}).then( () => {\n    //var movie_id = this.state.movie\n    //let searchURl = `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${apiKey}&language=en-US`\n    //fetch(searchURl)\n    //.then(res => res.json())\n    //.then(data => {\n    //    if (data.imdb_id == null) {\n    //        this.handlePick()\n    //    } else {\n    //        //console.log(data)\n    //        this.setState({\n    //            data: data\n    //        })\n    //    }\n    //})\n    //})\n  }\n\n  componentDidMount() {\n    var data = getAllMovie();\n    this.setState({\n      movie: data\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handlePick,\n        children: \"Pick!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Pick;","map":{"version":3,"sources":["/Users/ning/Personal/React_learn/pick-one/src/PickButton.js"],"names":["React","DisplayData","Imdb","Stream","apiKey","min_movie_id","latestUrl","getRandom","min","max","Math","floor","random","getAllMovie","movieList","index","listUrl","res","fetch","dat","json","console","log","push","Pick","Component","constructor","props","state","movie","id","imdb_id","handlePick","bind","handleIMDBchange","key","setState","imdb_data","arr","length","elm","componentDidMount","data","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DisplayData from './Display';\nimport Imdb from './Imdb'\nimport Stream from './Stream'\n\n//const apiKey = '361c5360d12fe6b74f04ebd76dfd7c4b' timdb key\nconst apiKey = 'nPkwzsC8PrwHhxzzZvhOFt6OU4rGNVuTFq1UQ7nS'\n\nconst min_movie_id = 2\nlet latestUrl = `https://api.themoviedb.org/3/movie/latest?api_key=${apiKey}&language=en-US`\n//let listUrl = `https://api.watchmode.com/v1/list-titles/?apiKey=${apiKey}&regions=GB&page=10`\n\n\n//generate random number\nfunction getRandom(min,max){\n    return Math.floor(Math.random()*(max-min+1))+min;\n};\n\nasync function getAllMovie() {\n    let movieList = [];\n\n    for (let index = 0; index < 1; index++) {\n        let listUrl = `https://api.watchmode.com/v1/list-titles/?apiKey=${apiKey}&regions=GB&page=10`\n        var res = await fetch(listUrl);\n        var dat = await res.json();\n        console.log(dat)\n        movieList.push(dat)\n    }\n\n    console.log(movieList)\n\n    return movieList;\n\n\n    //var latest_movie_id = dat.id;\n    //var random_movie_id = getRandom (min_movie_id, latest_movie_id);\n    //return random_movie_id\n}\n\n\nclass Pick extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movie: [],\n            id: \"\",\n            imdb_id: \"\"\n        }\n        this.handlePick = this.handlePick.bind(this);\n        this.handleIMDBchange = this.handleIMDBchange.bind(this);\n    }\n\n    handleIMDBchange (key) {\n        this.setState({\n            imdb_data: key\n        })\n        //console.log('Called')\n    }\n\n    handlePick() {\n        console.log(this.state.movie)\n        var arr = getRandom(0, this.state.movie.length);\n        var elm = getRandom(0, this.state.movie[arr].length)\n\n        console.log(this.state.movie[arr])\n\n        //getRamdonId().then(value => {\n        //    console.log(value)\n        //    this.setState({\n        //        movie: value\n        //    });\n        //}).then( () => {\n            //var movie_id = this.state.movie\n            //let searchURl = `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${apiKey}&language=en-US`\n            //fetch(searchURl)\n            //.then(res => res.json())\n            //.then(data => {\n            //    if (data.imdb_id == null) {\n            //        this.handlePick()\n            //    } else {\n            //        //console.log(data)\n            //        this.setState({\n            //            data: data\n            //        })\n            //    }\n            //})\n        //})\n    }\n    \n    componentDidMount () {\n        var data = getAllMovie();\n        this.setState({\n            movie: data\n        })\n    }\n\n    render () {\n        return (\n            <div>       \n                <button onClick={this.handlePick}>Pick!</button>\n            </div>\n        )\n    }\n}\n\nexport default Pick"]},"metadata":{},"sourceType":"module"}