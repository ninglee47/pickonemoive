{"ast":null,"code":"var _jsxFileName = \"/Users/ning/Personal/React_learn/pick-one/src/Stream.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = 'nPkwzsC8PrwHhxzzZvhOFt6OU4rGNVuTFq1UQ7nS';\nlet baseUrl = 'https://api.watchmode.com/v1/search/?apiKey={apiKey}&search_value=Ed%20Wood';\n\nasync function getStreamData(movie_id) {\n  let streams = await fetch(`https://api.watchmode.com/v1/title/${movie_id}/sources/?apiKey=${apiKey}&regions=GB`).then(res => res.json());\n  return streams;\n}\n\nfunction GenreList(props) {\n  let genres;\n\n  if (props.data.genres) {\n    genres = props.data.map(d =>\n    /*#__PURE__*/\n    //console.log(genre.name)\n    _jsxDEV(\"li\", {\n      children: d.source_id\n    }, d.source_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: genres\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_c = GenreList;\n\nclass Stream extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stream: []\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    //console.log(this.props.value.imdb_id)\n    var id = this.props.value.id;\n\n    if (id !== prevProps.value.id) {\n      getStreamData(id).then(data => this.setState({\n        stream: data\n      }));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Avaialbe on:\", /*#__PURE__*/_jsxDEV(GenreList, {\n        data: this.state.stream\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Stream;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenreList\");","map":{"version":3,"sources":["/Users/ning/Personal/React_learn/pick-one/src/Stream.js"],"names":["React","apiKey","baseUrl","getStreamData","movie_id","streams","fetch","then","res","json","GenreList","props","genres","data","map","d","source_id","Stream","Component","constructor","state","stream","componentDidUpdate","prevProps","id","value","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,0CAAf;AACA,IAAIC,OAAO,GAAG,6EAAd;;AAGA,eAAeC,aAAf,CAA8BC,QAA9B,EAAwC;AACpC,MAAIC,OAAO,GAAG,MAAMC,KAAK,CAAE,sCAAqCF,QAAS,oBAAmBH,MAAO,aAA1E,CAAL,CACnBM,IADmB,CACdC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADO,CAApB;AAGA,SAAOJ,OAAP;AACH;;AAED,SAASK,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,MAAIC,MAAJ;;AACA,MAAID,KAAK,CAACE,IAAN,CAAWD,MAAf,EAAuB;AACnBA,IAAAA,MAAM,GAAGD,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAgBC,CAAD;AAAA;AACpB;AACA;AAAA,gBACKA,CAAC,CAACC;AADP,OAASD,CAAC,CAACC,SAAX;AAAA;AAAA;AAAA;AAAA,YAFK,CAAT;AAMH;;AACD,sBACI;AAAA,2BACI;AAAA,gBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KAfQF,S;;AAiBT,MAAMO,MAAN,SAAqBjB,KAAK,CAACkB,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACR,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKS,KAAL,GAAY;AACRC,MAAAA,MAAM,EAAE;AADA,KAAZ;AAGH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B;AACA,QAAIC,EAAE,GAAG,KAAKb,KAAL,CAAWc,KAAX,CAAiBD,EAA1B;;AACA,QAAIA,EAAE,KAAKD,SAAS,CAACE,KAAV,CAAgBD,EAA3B,EAA+B;AAC3BrB,MAAAA,aAAa,CAACqB,EAAD,CAAb,CAAkBjB,IAAlB,CAAuBM,IAAI,IAAI,KAAKa,QAAL,CAAc;AACzCL,QAAAA,MAAM,EAAER;AADiC,OAAd,CAA/B;AAGH;AACJ;;AAEDc,EAAAA,MAAM,GAAI;AACN,wBACI;AAAA,8CAEI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWC;AAA5B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAzBgC;;AA4BrC,eAAeJ,MAAf","sourcesContent":["import React from 'react';\n\nconst apiKey = 'nPkwzsC8PrwHhxzzZvhOFt6OU4rGNVuTFq1UQ7nS'\nlet baseUrl = 'https://api.watchmode.com/v1/search/?apiKey={apiKey}&search_value=Ed%20Wood'\n\n\nasync function getStreamData (movie_id) {\n    let streams = await fetch(`https://api.watchmode.com/v1/title/${movie_id}/sources/?apiKey=${apiKey}&regions=GB`)\n    .then(res => res.json())\n\n    return streams\n}\n\nfunction GenreList(props) {\n    let genres\n    if (props.data.genres) {\n        genres = props.data.map((d)=> \n            //console.log(genre.name)\n            <li key={d.source_id}>\n                {d.source_id}\n            </li>\n        )   \n    }\n    return (\n        <div>\n            <ul>{genres }</ul>\n        </div>\n    )\n}\n\nclass Stream extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            stream: []\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        //console.log(this.props.value.imdb_id)\n        var id = this.props.value.id\n        if (id !== prevProps.value.id) {\n            getStreamData(id).then(data => this.setState({\n                stream: data\n            }))\n        }\n    }\n\n    render () {\n        return (\n            <div>\n                Avaialbe on:\n                <GenreList data={this.state.stream}/>\n            </div>\n        )\n    }\n}\n\nexport default Stream;"]},"metadata":{},"sourceType":"module"}