[{"/Users/ning/Personal/React_learn/pick-one/src/index.js":"1","/Users/ning/Personal/React_learn/pick-one/src/App.js":"2","/Users/ning/Personal/React_learn/pick-one/src/reportWebVitals.js":"3","/Users/ning/Personal/React_learn/pick-one/src/pickButton.js":"4","/Users/ning/Personal/React_learn/pick-one/src/PickButton.js":"5","/Users/ning/Personal/React_learn/pick-one/src/Display.js":"6","/Users/ning/Personal/React_learn/pick-one/src/Imdb.js":"7","/Users/ning/Personal/React_learn/pick-one/src/Stream.js":"8","/Users/ning/Personal/React_learn/pick-one/src/Imdb_info.js":"9"},{"size":555,"mtime":1631804027945,"results":"10","hashOfConfig":"11"},{"size":528,"mtime":1630330533079,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1630330533081,"results":"13","hashOfConfig":"11"},{"size":318,"mtime":1630333009588,"results":"14","hashOfConfig":"11"},{"size":3832,"mtime":1631899180571,"results":"15","hashOfConfig":"11"},{"size":1096,"mtime":1631646769706,"results":"16","hashOfConfig":"11"},{"size":1030,"mtime":1631886214924,"results":"17","hashOfConfig":"11"},{"size":2613,"mtime":1631898085628,"results":"18","hashOfConfig":"11"},{"size":573,"mtime":1631890939823,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1hu3ywy",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"44","usedDeprecatedRules":"22"},"/Users/ning/Personal/React_learn/pick-one/src/index.js",[],["45","46"],"/Users/ning/Personal/React_learn/pick-one/src/App.js",[],"/Users/ning/Personal/React_learn/pick-one/src/reportWebVitals.js",[],"/Users/ning/Personal/React_learn/pick-one/src/pickButton.js",["47","48"],"/Users/ning/Personal/React_learn/pick-one/src/PickButton.js",["49","50","51"],"import React from 'react';\nimport Imdb from './Imdb'\nimport Stream from './Stream'\nimport Imdb_info from './Imdb_info'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\nimport { Button, Col, Container, Row } from 'react-bootstrap';\n\n//const apiKey = '361c5360d12fe6b74f04ebd76dfd7c4b' timdb key\nconst apiKey = 'nPkwzsC8PrwHhxzzZvhOFt6OU4rGNVuTFq1UQ7nS'\n\n//generate random number\nfunction getRandom(min,max){\n    return Math.floor(Math.random()*(max-min+1))+min;\n};\n\nasync function getAllMovie() {\n    var page = getRandom(0, 104);\n    let movieList = [];\n\n    let listUrl = `https://api.watchmode.com/v1/list-titles/?apiKey=${apiKey}&regions=GB&page=${page}`\n    var res = await fetch(listUrl);\n    var dat = await res.json();\n    console.log(dat)\n    movieList.push(dat)\n    \n    return movieList;\n}\n\nasync function getSource() {\n    let url = `https://api.watchmode.com/v1/sources/?apiKey=${apiKey}&regions=GB`\n    var res = await fetch(url)\n    var dat = await res.json()\n    return dat;\n}\n\nasync function getGenre() {\n    let url = `https://api.watchmode.com/v1/genres/?apiKey=${apiKey}`\n    var res = await fetch(url)\n    var dat = await res.json()\n    return dat;\n}\n\n\nclass Pick extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataList: [],\n            movie: {},\n            imdb_data: {},\n            source: [],\n            genres: [],\n            selectedGenre: ''\n        }\n        this.handlePick = this.handlePick.bind(this);\n        this.handleIMDBchange = this.handleIMDBchange.bind(this);\n    }\n\n    handleIMDBchange (data) {\n        this.setState({\n            imdb_data: data\n        })\n        //console.log('Called')\n    }\n\n    handlePick() {\n        //console.log(this.state.dataList[0].titles)\n        var elm = getRandom(0, this.state.dataList[0].titles.length)\n        var movie = this.state.dataList[0].titles[elm]\n        console.log(movie)\n        this.setState({\n            movie: movie\n        })\n    }\n    \n    componentDidMount () {\n        getAllMovie().then( data =>\n            this.setState({\n                dataList: data\n            })\n        )\n        //.then(()=>this.handlePick())\n\n        getSource().then(res => \n            this.setState({\n                source: res\n            })\n        )\n    }\n\n    render () {\n        return (\n            <div >\n                <div className='d-flex p-3 mx-auto flex-column'>\n                    <h1 className='cover-heading text-center'>Pick a movie for you</h1>\n                    <Container>\n                        <Row>\n                            <Col className='cover'>\n                                <Imdb value={this.state.movie}  onIMDBchange={this.handleIMDBchange}/>\n                            </Col>\n                            <Col className='info'>\n                                <Imdb_info value={this.state.imdb_data} className='detail'/>\n                                <Stream value={this.state.movie} data={this.state.source}/>\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n\n                <div className='align-items-center'>\n                    <Button className=\"btn btn-lg btn-secondary\" onClick={this.handlePick}>Pick!</Button>\n                </div>                \n                \n                \n                <footer className=\"mastfoot mt-auto text-center\">\n                    <div className=\"inner\">\n                        <p>Supported regeions: GB</p>\n                      <p>\n                      <a href=\"https://www.watchmode.com/\" target=\"_blank\"> Streaming data powered by Watchmode.com </a>\n                      </p>\n                    </div>\n                </footer>\n            </div>\n            \n        )\n    }\n}\n\nexport default Pick","/Users/ning/Personal/React_learn/pick-one/src/Display.js",["52","53","54","55","56"],"import React from 'react';\n\nlet imgSrc = `https://www.themoviedb.org/t/p/w600_and_h900_bestv2`\nlet pageLink = \"https://www.imdb.com/title/\"\n\n\nfunction GenreList(props) {\n        let genres\n        if (props.data.genres) {\n            genres = props.data.genres.map((d)=> \n                //console.log(genre.name)\n                <li key={d.id}>\n                    {d.name}\n                </li>\n            )   \n        }\n        return (\n            <div>\n                Genre\n                <ul>{genres }</ul>\n            </div>\n        )\n}\n\nclass DisplayData extends React.Component {\n\n    constructor (props) {\n        super(props);\n    }\n\n    render() {\n         \n        \n        var imdb = this.props.data\n        //console.log(genres)\n        //console.log(imdb)\n\n        return (\n            <div>\n                <div>\n                    <h2> {this.props.value.title} {this.props.value.year}</h2>\n                    <a href={pageLink + this.props.value.imdb_id} target=\"_blank\">IMDB LINK</a>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DisplayData;",["57","58"],"/Users/ning/Personal/React_learn/pick-one/src/Imdb.js",["59"],"import React from 'react'\n\nconst omdb_key = '6163e7ca'\n\n\nclass Imdb extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {imdbData: {}}\n    }\n\n    componentDidUpdate(prevProps) {\n        //console.log(this.props.value.imdb_id)\n        var id = this.props.value.imdb_id\n        if (id !== prevProps.value.imdb_id) {\n            fetch(`http://www.omdbapi.com/?i=${id}&apikey=${omdb_key}`)\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                this.setState({\n                    imdbData: data\n                })\n                this.props.onIMDBchange(this.state.imdbData)\n            })\n            .catch(err => {\n            \tconsole.error(err);\n            })  \n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h2> {this.props.value.title} ({this.props.value.year})</h2>\n                <img src={this.state.imdbData.Poster}></img>\n            </div>\n        )\n\n    }\n}\n\nexport default Imdb","/Users/ning/Personal/React_learn/pick-one/src/Stream.js",["60","61","62"],"import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst apiKey = 'nPkwzsC8PrwHhxzzZvhOFt6OU4rGNVuTFq1UQ7nS'\nlet baseUrl = 'https://api.watchmode.com/v1/search/?apiKey={apiKey}&search_value=Ed%20Wood'\n\n\nasync function getStreamData (movie_id) {\n    let streams = await fetch(`https://api.watchmode.com/v1/title/${movie_id}/sources/?apiKey=${apiKey}&regions=GB`)\n    .then(res => res.json())\n\n    console.log(streams)\n\n    return streams\n}\n\nfunction GenreList(props) {\n    let genres\n    \n        genres = props.data.map((d, index)=> \n            //console.log(genre.name)\n            <li key={index}>\n                <a href={d.web_url} target='_blank'>{d.name}</a>\n            </li>\n        )   \n    \n    return (\n        <div>\n            <ul>{genres }</ul>\n        </div>\n    )\n}\n\nclass Stream extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            stream: []\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        var id = this.props.value.id\n        if (id !== prevProps.value.id) {\n            getStreamData(id)\n            .then(data => this.setState({\n                stream: data\n                })\n            ).then(()=> {\n                var arrayOne =  this.props.data;\n                var arrayTwo = this.state.stream;\n                \n                const results = arrayOne.filter(({ id: id1 }) => arrayTwo.some(({ source_id: id2 }) => id2 === id1));\n\n                console.log(results)\n                //Add stream service name\n                for (let index = 0; index < arrayTwo.length; index++) {\n                    const element = arrayTwo[index];\n                    for (let index = 0; index < results.length; index++) {\n                        const id = results[index].id;\n                        if (element.source_id == id) {\n                            element.name = results[index].name\n                        }    \n                    }   \n                }\n                \n                //filter duplicate data\n                arrayTwo = arrayTwo.filter((thing, index, self) =>\n                    index === self.findIndex((t) => (\n                      t.source_id === thing.source_id && t.web_url === thing.web_url\n                    ))\n                )\n\n                this.setState({\n                    stream: arrayTwo\n                })\n            })\n        }\n    }\n\n    render () {\n        return (\n            <div className='detail'>\n                Avaialbe on:\n                <GenreList  data={this.state.stream}/>\n            </div>\n        )\n    }\n}\n\nexport default Stream;","/Users/ning/Personal/React_learn/pick-one/src/Imdb_info.js",["63","64"],"import React from 'react'\n\nconst pageLink = \"https://www.imdb.com/title/\"\n\nclass Imdb_info extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className='detail'>\n                <p>Genre: {this.props.value.Genre}</p>\n                <p>Imdb Score: {this.props.value.imdbRating}</p>\n                <p>Votes: {this.props.value.imdbVotes}</p>\n                <a href={pageLink + this.props.value.imdb_id} target=\"_blank\">IMDB Page</a>\n            </div>\n        )\n\n    }\n}\n\nexport default Imdb_info",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":16},{"ruleId":"69","severity":1,"message":"73","line":4,"column":7,"nodeType":"71","messageId":"72","endLine":4,"endColumn":17},{"ruleId":"69","severity":1,"message":"74","line":37,"column":16,"nodeType":"71","messageId":"72","endLine":37,"endColumn":24},{"ruleId":"75","severity":1,"message":"76","line":103,"column":33,"nodeType":"77","messageId":"78","endLine":103,"endColumn":93},{"ruleId":"79","severity":1,"message":"80","line":119,"column":23,"nodeType":"77","messageId":"81","endLine":119,"endColumn":76,"fix":"82"},{"ruleId":"69","severity":1,"message":"83","line":3,"column":5,"nodeType":"71","messageId":"72","endLine":3,"endColumn":11},{"ruleId":"69","severity":1,"message":"84","line":7,"column":10,"nodeType":"71","messageId":"72","endLine":7,"endColumn":19},{"ruleId":"85","severity":1,"message":"86","line":27,"column":5,"nodeType":"87","messageId":"88","endLine":29,"endColumn":6},{"ruleId":"69","severity":1,"message":"89","line":34,"column":13,"nodeType":"71","messageId":"72","endLine":34,"endColumn":17},{"ruleId":"79","severity":1,"message":"80","line":42,"column":21,"nodeType":"77","messageId":"81","endLine":42,"endColumn":83,"fix":"90"},{"ruleId":"65","replacedBy":"91"},{"ruleId":"67","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":36,"column":17,"nodeType":"77","endLine":36,"endColumn":55},{"ruleId":"69","severity":1,"message":"95","line":5,"column":5,"nodeType":"71","messageId":"72","endLine":5,"endColumn":12},{"ruleId":"79","severity":1,"message":"80","line":23,"column":17,"nodeType":"77","messageId":"81","endLine":23,"endColumn":53,"fix":"96"},{"ruleId":"97","severity":1,"message":"98","line":61,"column":47,"nodeType":"99","messageId":"100","endLine":61,"endColumn":49},{"ruleId":"85","severity":1,"message":"86","line":6,"column":5,"nodeType":"87","messageId":"88","endLine":8,"endColumn":6},{"ruleId":"79","severity":1,"message":"80","line":16,"column":17,"nodeType":"77","messageId":"81","endLine":16,"endColumn":79,"fix":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'PickButton' is defined but never used.","'getGenre' is defined but never used.","react/jsx-pascal-case","Imported JSX component Imdb_info must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"104","text":"105"},"'imgSrc' is assigned a value but never used.","'GenreList' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'imdb' is assigned a value but never used.",{"range":"106","text":"105"},["102"],["103"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'baseUrl' is assigned a value but never used.",{"range":"107","text":"105"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"range":"108","text":"105"},"no-global-assign","no-unsafe-negation",[3635,3635]," rel=\"noreferrer\"",[993,993],[675,675],[495,495]]